# ci.yml – Run tests on every push to dev.  If tests pass, automatically
# fast‑forward‑merge dev to main.

name: Backend CI & Auto‑Merge

# Trigger: push events that land on the dev branch only
on:
  push:
    branches:
      - dev

permissions:
  contents: write # required so the merge step can push to main
  pull-requests: write # needed for some auto‑merge actions

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend # all commands execute inside /backend
    env:
      PYTHONPATH: ${{ github.workspace }}/backend
    steps:
      - uses: actions/checkout@v4

      # ---------- Python toolchain ----------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12" # match your local dev/runtime

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      # ---------- Run pytest ----------
      - name: Run unit tests with coverage
        run: |
          echo "DATABASE_URL=sqlite:///test.db" > .env
          echo "SECRET_KEY=dev-secret" >> .env
          echo "FRONTEND_URL=http://localhost:5173" >> .env
          pytest -v --cov --cov-report=term-missing

  merge-to-main:
    runs-on: ubuntu-latest
    needs: test
    if: success()
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fast‑forward dev → main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git fetch origin main:main   # safe, 'main' isn't checked out

          git checkout -B main origin/main

          git merge --ff-only origin/dev

          git push origin main
